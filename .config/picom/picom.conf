#################################
#             Shadows           #
#################################
shadow = false;
#shadow-radius = 12;
#shadow-opacity = 0.75;
#shadow-offset-x = -15;
#shadow-offset-y = -15;
#shadow-red = 0
#shadow-green = 0
#shadow-blue = 0
#shadow-color = "#000000"
#shadow-exclude = [
#  "name = 'Notification'",
#  "class_g = 'Conky'",
#  "class_g ?= 'Notify-osd'",
#  "class_g = 'Cairo-clock'",
#  "_GTK_FRAME_EXTENTS@:c"
#];
# clip-shadow-above = []
# shadow-exclude-reg = ""
# crop-shadow-to-monitor = false


#################################
#           Fading              #
#################################
fading = true;
# Opacity change between steps while fading in. (0.01 - 1.0, defaults to 0.028)
fade-in-step = 0.04;
# Opacity change between steps while fading out. (0.01 - 1.0, defaults to 0.03)
fade-out-step = 0.04;
# The time between steps in fade step, in milliseconds. (> 0, defaults to 10)
# fade-delta = 10;
# fade-exclude = []
# no-fading-openclose = false
# Do not fade destroyed ARGB windows with WM frame. Workaround of bugs in Openbox, Fluxbox, etc.
# no-fading-destroyed-argb = false


#################################
#   Transparency / Opacity      #
#################################
# Opacity of inactive windows. (0.1 - 1.0, defaults to 1.0)
inactive-opacity = 0.93;
# Opacity of window titlebars and borders. (0.1 - 1.0, disabled by default)
# frame-opacity = 1.0
inactive-opacity-override = false;
# Default opacity for active windows. (0.0 - 1.0, defaults to 1.0)
active-opacity = 0.97;
# Dim inactive windows. (0.0 - 1.0, defaults to 0.0)
# inactive-dim = 0.0
# Use fixed inactive dim value, instead of adjusting according to window opacity.
# inactive-dim-fixed = 1.0

# focus-exclude = [ "class_g = 'Cairo-clock'" ];

# Specify a list of opacity rules, in the format `PERCENT:PATTERN`,
# like `50:name *= "Firefox"`. picom-trans is recommended over this.
# Note we don't make any guarantee about possible conflicts with other
# programs that set '_NET_WM_WINDOW_OPACITY' on frame or client windows.
# example:
#    opacity-rule = [ "80:class_g = 'URxvt'" ];


#################################
#           Corners             #
#################################
corner-radius = 0
#rounded-corners-exclude = [
#  "window_type = 'dock'",
#  "window_type = 'desktop'"
#];


#################################
#     Background-Blurring       #
#################################
# blur-method =
# blur-size = 12
# blur-deviation = false
# blur-strength = 5
# blur-background = false
# blur-background-frame = false
# blur-background-fixed = false

# Specify the blur convolution kernel, with the following format:
# example:
#   blur-kern = "5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1";
#
# blur-kern = ""
# blur-kern = "3x3box";

# Exclude conditions for background blur.
#blur-background-exclude = [
#  "window_type = 'dock'",
#  "window_type = 'desktop'",
#  "_GTK_FRAME_EXTENTS@:c"
#];


#################################
#       General Settings        #
#################################
# daemon = false

# Specify the backend to use: `xrender`, `glx`, `egl` or `xr_glx_hybrid`. `xrender` is the default one.
backend = "xrender";

# Use higher precision during rendering, and apply dither when presenting the rendered screen. Reduces banding artifacts, but might cause performance degradation. Only works with OpenGL.
dithered-present = false;

vsync = true;
# dbus = false

# Try to detect WM windows (a non-override-redirect window with no child that has 'WM_STATE') and mark them as active.
mark-wmwin-focused = true;

# Mark override-redirect windows that doesn't have a child window with 'WM_STATE' focused.
mark-ovredir-focused = true;

# Try to detect windows with rounded corners and don't consider them shaped windows. The accuracy is not very high, unfortunately.
detect-rounded-corners = false;

# Detect '_NET_WM_WINDOW_OPACITY' on client windows, useful for window managers not passing '_NET_WM_WINDOW_OPACITY' of client windows to frame windows.
detect-client-opacity = true;

# Use EWMH '_NET_ACTIVE_WINDOW' to determine currently focused window, rather than listening to 'FocusIn'/'FocusOut' event. Might have more accuracy, provided that the WM supports it.
# use-ewmh-active-win = false

# Unredirect all windows if a full-screen opaque window is detected, to maximize performance for full-screen windows. Known to cause flickering when redirecting/unredirecting windows.
# unredir-if-possible = false

# Delay before unredirecting the window, in milliseconds. Defaults to 0.
# unredir-if-possible-delay = 0

# Conditions of windows that shouldn't be considered full-screen for unredirecting screen.
# unredir-if-possible-exclude = []

# Use 'WM_TRANSIENT_FOR' to group windows, and consider windows in the same group focused at the same time.
detect-transient = true;

# Use 'WM_CLIENT_LEADER' to group windows, and consider windows in the same group focused at the same time. This usually means windows from the same application will be considered focused or unfocused at the same time.
# 'WM_TRANSIENT_FOR' has higher priority if detect-transient is enabled, too.
# detect-client-leader = false

# resize-damage = 1
# invert-color-include = []
# glx-no-stencil = false
# glx-no-rebind-pixmap = false

# no-use-damage = false
use-damage = true;

# xrender-sync-fence = false
# window-shader-fg = "default"

# Use rules to set per-window shaders. Syntax is SHADER_PATH:PATTERN, similar
# to opacity-rule. SHADER_PATH can be "default". This overrides window-shader-fg.
# window-shader-fg-rule = [
#   "my_shader.frag:window_type != 'dock'"
# ]

# force-win-blend = false
# no-ewmh-fullscreen = false

# Setting this to 1.0 disables this behaviour. Requires --use-damage to be disabled. (default: 1.0)
# max-brightness = 1.0

# transparent-clipping = false
# transparent-clipping-exclude = []

# Set the log level. Possible values are:
#  "trace", "debug", "info", "warn", "error"
log-level = "warn";

# log-file = "/path/to/your/log/file"
# show-all-xerrors = false
# write-pid-path = "/path/to/your/log/file"

# Window type settings
#
# 'WINDOW_TYPE' is one of the 15 window types defined in EWMH standard:
#     "unknown", "desktop", "dock", "toolbar", "menu", "utility",
#     "splash", "dialog", "normal", "dropdown_menu", "popup_menu",
#     "tooltip", "notification", "combo", and "dnd".
#
# Following per window-type options are available: ::
#
#   fade, shadow:::
#     Controls window-type-specific shadow and fade settings.
#
#   opacity:::
#     Controls default opacity of the window type.
#
#   focus:::
#     Controls whether the window of this type is to be always considered focused.
#     (By default, all window types except "normal" and "dialog" has this on.)
#
#   full-shadow:::
#     Controls whether shadow is drawn under the parts of the window that you
#     normally won't be able to see. Useful when the window has parts of it
#     transparent, and you want shadows in those areas.
#
#   clip-shadow-above:::
#     Controls whether shadows that would have been drawn above the window should
#     be clipped. Useful for dock windows that should have no shadow painted on top.
#
#   redir-ignore:::
#     Controls whether this type of windows should cause screen to become
#     redirected again after been unredirected. If you have unredir-if-possible
#     set, and doesn't want certain window to cause unnecessary screen redirection,
#     you can set this to `true`.
#
wintypes:
{
  tooltip = { fade = true; shadow = true; opacity = 0.75; focus = true; full-shadow = false; };
  dock = { shadow = false; clip-shadow-above = true; }
  dnd = { shadow = false; }
  popup_menu = { opacity = 0.8; }
  dropdown_menu = { opacity = 0.8; }
};

